name: SeqAn3 API-Stability

on:
  # Will always run on the default branch
  schedule:
    - cron: "0 1 * * SUN"
  # Enables a manual trigger, may run on any branch
  workflow_dispatch:

env:
  CMAKE_VERSION: 3.8.2
  SEQAN3_NO_VERSION_CHECK: 1
  TZ: Europe/Berlin

defaults:
  run:
    shell: bash -exo pipefail {0}

jobs:
  build:
    name: API-Stability gcc${{ matrix.compiler }}
    runs-on: ubuntu-20.04
    timeout-minutes: 300
    strategy:
      fail-fast: false
      matrix:
        compiler: [9, 10, 11]

    steps:
      - name: Checkout SeqAn3
        uses: actions/checkout@v2
        with:
          path: seqan3
          submodules: true

      - name: Checkout SeqAn2
        uses: actions/checkout@v2
        with:
          repository: seqan/seqan
          ref: develop
          path: seqan3/submodules/seqan

      - name: Configure APT
        run: bash ./seqan3/.github/workflows/scripts/configure_apt.sh

      - name: Install CMake
        run: bash ./seqan3/.github/workflows/scripts/install_cmake.sh

      - name: Install compiler g++-${{ matrix.compiler }}
        run: sudo apt-get install --yes g++-${{ matrix.compiler }}

      - name: Configure tests
        env:
          CXX: g++-${{ matrix.compiler }}
          CC: gcc-${{ matrix.compiler }}
        run: |
          mkdir seqan3-build
          cd seqan3-build
          cmake ../seqan3/test/api_stability -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS="-DSEQAN3_DISABLE_DEPRECATED_WARNINGS=1"

      - name: Build tests
        run: |
          cd seqan3-build
          CMAKE_BUILD_PARALLEL_LEVEL=2 cmake --build . -- -k 2>&1 | tee build.log

      - name: Setup Python
        if: ${{ failure() }}
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Process Log
        if: ${{ failure() }}
        run: |
          echo "API_LOG<<EOF" >> $GITHUB_ENV # API_LOG is the env variable. EOF is set as delimiter for multiline vars.
          echo "$(python3 seqan3/.github/workflows/scripts/process_compiler_error_log.py seqan3-build/build.log)" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create issue
        if: ${{ failure() }}
        uses: JasonEtco/create-an-issue@v2
        env:
          GITHUB_TOKEN: ${{ github.token }}
          COMPILER: ${{ matrix.compiler }}
        with:
          filename: seqan3/.github/ISSUE_TEMPLATE/api_cron_template.md
          update_existing: true
