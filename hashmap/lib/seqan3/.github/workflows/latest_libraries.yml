name: SeqAn3 Latest Libraries CI

on:
  # Will always run on the default branch
  schedule:
    - cron: "0 4 * * SUN"
  # Enables a manual trigger, may run on any branch
  workflow_dispatch:

env:
  CMAKE_VERSION: 3.8.2
  SEQAN3_NO_VERSION_CHECK: 1
  TZ: Europe/Berlin

defaults:
  run:
    shell: bash -exo pipefail {0}

jobs:
  build:
    name: ${{ matrix.build }} gcc${{ matrix.compiler }}
    runs-on: ubuntu-20.04
    timeout-minutes: 300
    strategy:
      fail-fast: false
      matrix:
        compiler: [7, 8, 9, 10, 11]
        build: [unit, snippet, performance, header]

    steps:
      - name: Checkout SeqAn3
        uses: actions/checkout@v2
        with:
          path: seqan3
          submodules: true

      - name: Update all submodules
        run: |
          cd seqan3
          git submodule status
          git submodule update --recursive --remote
          git submodule status

      - name: Update googletest
        run: |
          grep 'gtest_git_tag ".*"' seqan3/test/cmake/seqan3_require_test.cmake
          sed -i 's/gtest_git_tag ".*"/gtest_git_tag "master"/' seqan3/test/cmake/seqan3_require_test.cmake
          grep 'gtest_git_tag ".*"' seqan3/test/cmake/seqan3_require_test.cmake

      - name: Update googlebenchmark
        run: |
          grep 'gbenchmark_git_tag ".*"' seqan3/test/cmake/seqan3_require_benchmark.cmake
          sed -i 's/gbenchmark_git_tag ".*"/gbenchmark_git_tag "master"/' seqan3/test/cmake/seqan3_require_benchmark.cmake
          grep 'gbenchmark_git_tag ".*"' seqan3/test/cmake/seqan3_require_benchmark.cmake

      - name: Checkout SeqAn2
        uses: actions/checkout@v2
        with:
          repository: seqan/seqan
          ref: develop
          path: seqan3/submodules/seqan

      - name: Configure APT
        run: bash ./seqan3/.github/workflows/scripts/configure_apt.sh

      - name: Install CMake
        run: bash ./seqan3/.github/workflows/scripts/install_cmake.sh

      - name: Install compiler g++-${{ matrix.compiler }}
        run: sudo apt-get install --yes g++-${{ matrix.compiler }}

      - name: Configure tests
        env:
          CXX: g++-${{ matrix.compiler }}
          CC: gcc-${{ matrix.compiler }}
        run: |
          mkdir seqan3-build
          cd seqan3-build
          cmake ../seqan3/test/${{ matrix.build }} -DCMAKE_BUILD_TYPE=Release -DSEQAN3_VERBOSE_TESTS=OFF -DSEQAN3_BENCHMARK_MIN_TIME=0.01
          if [[ "${{ matrix.build }}" =~ ^(unit|snippet|header)$ ]]; then
            make gtest_build
          fi
          if [[ "${{ matrix.build }}" =~ ^(performance|header)$ ]]; then
            make gbenchmark_build
          fi

      - name: Build tests
        run: |
          cd seqan3-build
          make -k -j2 2>&1 | tee build.log

      - name: Setup Python
        if: ${{ failure() }}
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Process Log
        if: ${{ failure() }}
        run: |
          echo "LL_LOG<<EOF" >> $GITHUB_ENV # LL_LOG is the env variable. EOF is set as delimiter for multiline vars.
          echo "$(python3 seqan3/.github/workflows/scripts/process_compiler_error_log.py seqan3-build/build.log)" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create issue
        if: ${{ failure() }}
        uses: JasonEtco/create-an-issue@v2
        env:
          GITHUB_TOKEN: ${{ github.token }}
          BUILD: ${{ matrix.build }}
          COMPILER: ${{ matrix.compiler }}
        with:
          filename: seqan3/.github/ISSUE_TEMPLATE/latest_libs_cron_template.md
          update_existing: true
